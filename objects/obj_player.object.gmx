<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>spr_player</spriteName>
  <solid>-1</solid>
  <visible>-1</visible>
  <depth>2</depth>
  <persistent>-1</persistent>
  <parentName>self</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>realX = x
realY = y
walking = 3
cooldown = 20
canFire = true
maxAmmo = 12
ammo = maxAmmo
reloading = false
justEntered = false
windowX = window_get_width()
windowY = window_get_height()

display_reset(0,true)

// Dialogs:
welcomeText = 'Welcome to "Infiltrator: The Cult of Cthulhu" tech demo! If you are interested in the full release or anything regarding to the game, stay tuned in Twitter @FrosticOfficial'
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="3">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>walking = 3
obj_dialog_welcome.done = true
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="2">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>justEntered = false
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="1">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>reloading = false
ammo = maxAmmo
canFire = true
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>canFire = true
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>// Rotation:
image_angle = point_direction(x, y, mouse_x, mouse_y)
    
// Movement:
if room = map {
    walking = 1
}
if room = map_vent {
    walking = 0.4
}

if keyboard_check(vk_escape) {
    game_end()
}

if keyboard_check(ord('A')) or keyboard_check(ord('D')) or keyboard_check(ord('W')) or keyboard_check(ord('S')) {
    sprite_index = spr_playerwalking
    if keyboard_check(ord('A')) and not collision_rectangle(x-6,y-4,x,y+4,obj_wall,false,true) {
        realX -= walking
        x = round(realX)
    }
    if keyboard_check(ord('D')) and not collision_rectangle(x,y-4,x+6,y+4,obj_wall,false,true) {
        realX += walking
        x = round(realX)
    }
    if keyboard_check(ord('W')) and not collision_rectangle(x-4,y-6,x+4,y,obj_wall,false,true) {
        realY -= walking
        y = round(realY)
    }
    if keyboard_check(ord('S')) and not collision_rectangle(x-4,y,x+4,y+6,obj_wall,false,true) {
        realY += walking
        y = round(realY)
    }
}
else {
    sprite_index = spr_player
}

// Shooting:
if mouse_check_button(mb_left) and canFire and ammo &gt; 0 and not reloading {
    bullet = instance_create(x,y,obj_bullet)
    bullet.direction = image_angle
    bullet.speed = 10
    ammo -= 1
    alarm[0] = cooldown
    canFire = false
    audio_play_sound(sound_PistolSilenced,10,false)
}

// Reloading:
if keyboard_check(ord('R')) and ammo != maxAmmo and not reloading {
    reloading = true
    canFire = false
    alarm[1] = 180
}

// Entering and leaving vents:
if collision_circle(x,y,6,obj_ventopen,false,true) and not justEntered {
    if keyboard_check(ord('Q')) {
        justEntered = true
        room_goto(map)
        alarm[2] = 10
    }
}
    
if collision_rectangle(x-6,y-6,x+6,y+6,obj_table,false,true) and not justEntered {
    if keyboard_check(ord('Q')) {
        justEntered = true
        room_goto(map_vent)
        alarm[2] = 10
    }
}

// Dying:
if collision_circle(x,y,6,obj_bulletenemy,true,true) {
    dead = instance_create(x,y,obj_playerdead)
    dead.image_angle = obj_bulletenemy.image_angle
    instance_destroy()
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="64">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>draw_set_alpha_test(true)
draw_set_halign(fa_center)
draw_set_valign(fa_center)
draw_set_color(c_white)
draw_set_font(font_large)

view_wport[0] = display_get_width()
view_hport[0] = display_get_height()

draw_sprite_stretched(spr_vision,0,0,0-(windowX/16*3.5),windowX,windowX)

draw_text(64,windowY-64,string_format(ammo,0,0))

if reloading {
    draw_set_color(c_white)
    draw_set_font(font_small)
    draw_text(64,windowY-22,'Reloading...')
}

if collision_rectangle(x,y,x,y,obj_ventopen,false,true) {
    draw_set_color(c_white)
    draw_set_font(font_small)
    draw_text(windowX/2,windowY/2,'[Q] Leave vent')
}

if collision_rectangle(x,y-4,x,y+4,obj_table,false,true) {
    draw_set_color(c_white)
    draw_set_font(font_small)
    draw_text(windowX/2,windowY/2,'[Q] Enter vent')
}

draw_sprite(spr_ammoind,ammo,32,windowY-64)

var inDialog = false

if collision_point(x,y,obj_dialog_welcome,false,true) and obj_dialog_welcome.done = false {
    inDialog = true
    dialog = welcomeText
}
    
if inDialog {
    draw_sprite(spr_dialog,0,windowX/2,windowY/10*7)
    draw_set_font(font_small)
    draw_set_color(c_black)
    draw_text_ext(windowX/2,windowY/10*7,dialog,32,440)
    walking = 0
    alarm[3] = 300
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>draw_set_alpha_test(true)

draw_sprite_ext_shadow(sprite_index,0,x,y,1,1,image_angle,c_white,1,2,225,c_black,0.5)
draw_self()
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
