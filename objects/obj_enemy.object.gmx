<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>spr_enemy</spriteName>
  <solid>-1</solid>
  <visible>-1</visible>
  <depth>2</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>canFire = false

lastX = x
lastY = y

cellSize = 32
grid = mp_grid_create(0,0,room_width div cellSize,room_height div cellSize,cellSize,cellSize)
mp_grid_add_instances(grid,obj_wall,false)
mp_grid_add_instances(grid,obj_table,false)
mp_grid_add_instances(grid,obj_elevatorup,false)
mp_grid_add_instances(grid,obj_elevatordown,false)
mp_grid_add_instances(grid,obj_desk,false)
mp_grid_add_instances(grid,obj_plant,false)
mp_grid_add_instances(grid,obj_filecabinet,false)
path = path_add()
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>canFire = true
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>// Dying:
if collision_rectangle(x-28, y-28, x+28, y+28, obj_bullet, false, true) {
    instance_create(x,y,obj_enemydead)
    choice = random(2)
    if choice &lt; 1 {
        audio_play_sound(snd_death0, 1, false)
    }
    if choice &gt;= 1 {
        audio_play_sound(snd_death1, 1, false)
    }
    instance_destroy()
    instance_destroy(obj_bullet)
}

if instance_exists(obj_player)
{
    var sightLine = false
    var vision = false
    var notice = false

    // Pathfinding:
    if mp_grid_path(grid,path,x,y,lastX,lastY,true) and distance_to_point(lastX, lastY) &gt; 64
    {
        path_start(path,2,"",true)
        sprite_index = spr_enemywalking
    }
    else
    {
        sprite_index = spr_enemy
    }

    // Targeting:
    if distance_to_object(obj_player) &lt; 256
    {
        if not collision_line(x,y,obj_player.x,obj_player.y,obj_wall,false,true)
        {
            sightLine = true
        }
        if (abs(image_angle - point_direction(x,y,obj_player.x,obj_player.y)) &lt;= 50 or abs(image_angle - point_direction(x,y,obj_player.x,obj_player.y)) &gt;= 310)
        {
            vision = true
        }
        if vision or distance_to_object(obj_player) &lt;= 32
        {
            notice = true
        }
        if sightLine and notice and instance_exists(obj_player)
        {
            lastX = obj_player.x
            lastY = obj_player.y
            image_angle = point_direction(x,y,lastX,lastY)
            if canFire
            {
                bullet = instance_create(x,y,obj_bulletenemy)
                bullet.speed = 16
                bullet.direction = image_angle + random_range(-8,8)
                alarm[0] = 20
            }
        }
        else
        {
        canFire = false
        alarm[0] = 80
        }
    }
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>draw_set_alpha_test(true)

draw_sprite_ext_shadow(sprite_index,0,x,y,1,1,image_angle,c_white,1,2,225,c_black,0.5)
draw_self()
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>1</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
